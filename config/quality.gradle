apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'pmd'

def qualityConfigDir = "$project.rootDir/config/quality"
def reportsDir = "$project.buildDir/reports"

check.dependsOn 'checkstyle', 'findbugsXml', 'findbugsHtml', 'pmd', 'lint'

task checkstyle(type: Checkstyle, group: 'Verification',
        description: 'Runs code style checks') {

    ignoreFailures = true
    configFile file("$qualityConfigDir/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    exclude '**/*Test.java'

    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination file("$reportsDir/checkstyle/checkstyle-results.xml")
        }
        html {
            destination file("$reportsDir/checkstyle/checkstyle-results.html")
        }
    }

    classpath = files()
}

task findbugsXml(type: FindBugs, group: 'Verification',
        description: 'Inspect java bytecode for bugs',
        dependsOn: ['compileDebugSources', 'compileReleaseSources']) {

    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$qualityConfigDir/findbugs/android-exclude-filter.xml")
    classes = files("$project.rootDir/app/build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = false
        xml {
            destination file("$reportsDir/findbugs/findbugs-results.xml")
        }
        html {
            destination file("$reportsDir/findbugs/findbugs-results.html")
        }
    }

    classpath = files()
}

task findbugsHtml(type: FindBugs, group: 'Verification',
        description: 'Inspect java bytecode for bugs',
        dependsOn: ['compileDebugSources', 'compileReleaseSources']) {

    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$qualityConfigDir/findbugs/android-exclude-filter.xml")
    classes = files("$project.rootDir/app/build/intermediates/classes")

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination file("$reportsDir/findbugs/findbugs-results.xml")
        }
        html {
            destination file("$reportsDir/findbugs/findbugs-results.html")
        }
    }

    classpath = files()
}

task pmd(type: Pmd, group: 'Verification',
        description: 'Inspect sourcecode for bugs') {
    ignoreFailures = true

    ruleSetFiles = files("$qualityConfigDir/pmd/pmd.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = true
        html.enabled = true
        xml {
            destination file("$reportsDir/pmd/pmd-results.xml")
        }
        html {
            destination file("$reportsDir/pmd/pmd-results.html")
        }
    }
}

android {
    lintOptions {
        abortOnError false
        xmlReport true
        htmlReport true
        lintConfig file("$qualityConfigDir/lint/lint.xml")
        htmlOutput file("$reportsDir/lint/lint-results.html")
        xmlOutput file("$reportsDir/lint/lint-results.xml")
    }
}


